// Mocks generated by Mockito 5.4.4 from annotations
// in qurani/test/helper/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:typed_data' as _i34;

import 'package:adhan/adhan.dart' as _i35;
import 'package:adhan/src/calculation_parameters.dart' as _i10;
import 'package:adhan/src/coordinates.dart' as _i9;
import 'package:adhan/src/data/date_components.dart' as _i11;
import 'package:adhan/src/prayer.dart' as _i36;
import 'package:audioplayers/audioplayers.dart' as _i7;
import 'package:bloc/bloc.dart' as _i40;
import 'package:dartz/dartz.dart' as _i21;
import 'package:dio/dio.dart' as _i13;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i32;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:geolocator/geolocator.dart' as _i37;
import 'package:geolocator_android/geolocator_android.dart' as _i16;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i15;
import 'package:logging/logging.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i33;
import 'package:qurani/core/core.dart' as _i14;
import 'package:qurani/features/ayah/data/datasource/remote_datasource.dart'
    as _i39;
import 'package:qurani/features/ayah/data/models/models.dart' as _i20;
import 'package:qurani/features/ayah/domain/domain.dart' as _i24;
import 'package:qurani/features/ayah/logic/blocs/ayahs/ayahs_bloc.dart' as _i28;
import 'package:qurani/features/bookmark/bookmark.dart' as _i29;
import 'package:qurani/features/bookmark/data/data.dart' as _i38;
import 'package:qurani/features/bookmark/domain/domain.dart' as _i25;
import 'package:qurani/features/detail_surah/data/models/models.dart' as _i19;
import 'package:qurani/features/detail_surah/detail_surah.dart' as _i27;
import 'package:qurani/features/detail_surah/domain/domain.dart' as _i22;
import 'package:qurani/features/surah/data/data.dart' as _i18;
import 'package:qurani/features/surah/domain/domain.dart' as _i23;
import 'package:qurani/features/surah/logic/blocs/surahs/surah_bloc.dart'
    as _i26;
import 'package:qurani/features/surah/logic/cubits/prayer_time/prayer_time_cubit.dart'
    as _i31;
import 'package:qurani/presentation/ui_controller/appbar/appbar_bloc.dart'
    as _i30;
import 'package:sqflite/sqflite.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioCache_5 extends _i1.SmartFake implements _i7.AudioCache {
  _FakeAudioCache_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompleter_6<T> extends _i1.SmartFake implements _i8.Completer<T> {
  _FakeCompleter_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCoordinates_7 extends _i1.SmartFake implements _i9.Coordinates {
  _FakeCoordinates_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCalculationParameters_8 extends _i1.SmartFake
    implements _i10.CalculationParameters {
  _FakeCalculationParameters_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_9 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateComponents_10 extends _i1.SmartFake
    implements _i11.DateComponents {
  _FakeDateComponents_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioPlayer_11 extends _i1.SmartFake implements _i7.AudioPlayer {
  _FakeAudioPlayer_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_12 extends _i1.SmartFake implements _i12.Logger {
  _FakeLogger_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_13 extends _i1.SmartFake implements _i13.Dio {
  _FakeDio_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestRetrier_14 extends _i1.SmartFake
    implements _i14.RequestRetrier {
  _FakeRequestRetrier_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternetConnectionChecker_15 extends _i1.SmartFake
    implements _i15.InternetConnectionChecker {
  _FakeInternetConnectionChecker_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePosition_16 extends _i1.SmartFake implements _i16.Position {
  _FakePosition_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_17 extends _i1.SmartFake implements _i17.Database {
  _FakeDatabase_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahRes_18 extends _i1.SmartFake implements _i18.SurahRes {
  _FakeSurahRes_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahDetailResModel_19 extends _i1.SmartFake
    implements _i19.SurahDetailResModel {
  _FakeSurahDetailResModel_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioFileModel_20 extends _i1.SmartFake
    implements _i19.AudioFileModel {
  _FakeAudioFileModel_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAyahResModel_21 extends _i1.SmartFake implements _i20.AyahResModel {
  _FakeAyahResModel_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_22<L, R> extends _i1.SmartFake implements _i21.Either<L, R> {
  _FakeEither_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahDetailRepository_23 extends _i1.SmartFake
    implements _i22.SurahDetailRepository {
  _FakeSurahDetailRepository_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseSurahRepository_24 extends _i1.SmartFake
    implements _i23.BaseSurahRepository {
  _FakeBaseSurahRepository_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAyahRepository_25 extends _i1.SmartFake
    implements _i24.AyahRepository {
  _FakeAyahRepository_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBookmarkRepository_26 extends _i1.SmartFake
    implements _i25.BookmarkRepository {
  _FakeBookmarkRepository_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSurahsUseCase_27 extends _i1.SmartFake
    implements _i23.GetSurahsUseCase {
  _FakeGetSurahsUseCase_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahState_28 extends _i1.SmartFake implements _i26.SurahState {
  _FakeSurahState_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSurahDetailUseCase_29 extends _i1.SmartFake
    implements _i22.GetSurahDetailUseCase {
  _FakeGetSurahDetailUseCase_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailSurahState_30 extends _i1.SmartFake
    implements _i27.DetailSurahState {
  _FakeDetailSurahState_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAyahUsecase_31 extends _i1.SmartFake
    implements _i24.GetAyahUsecase {
  _FakeGetAyahUsecase_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRandomAyahUsecase_32 extends _i1.SmartFake
    implements _i24.GetRandomAyahUsecase {
  _FakeGetRandomAyahUsecase_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAyahsState_33 extends _i1.SmartFake implements _i28.AyahsState {
  _FakeAyahsState_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBookmarksUsecase_34 extends _i1.SmartFake
    implements _i25.GetBookmarksUsecase {
  _FakeGetBookmarksUsecase_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsBookmarkUsecase_35 extends _i1.SmartFake
    implements _i25.IsBookmarkUsecase {
  _FakeIsBookmarkUsecase_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddBookmarkUsecase_36 extends _i1.SmartFake
    implements _i25.AddBookmarkUsecase {
  _FakeAddBookmarkUsecase_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveBookmarkUsecase_37 extends _i1.SmartFake
    implements _i25.RemoveBookmarkUsecase {
  _FakeRemoveBookmarkUsecase_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBookmarkState_38 extends _i1.SmartFake
    implements _i29.BookmarkState {
  _FakeBookmarkState_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppbarState_39 extends _i1.SmartFake implements _i30.AppbarState {
  _FakeAppbarState_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserLocation_40 extends _i1.SmartFake implements _i14.UserLocation {
  _FakeUserLocation_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrayerTimeState_41 extends _i1.SmartFake
    implements _i31.PrayerTimeState {
  _FakePrayerTimeState_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioPlayerManager_42 extends _i1.SmartFake
    implements _i14.AudioPlayerManager {
  _FakeAudioPlayerManager_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSurahAudioUsecase_43 extends _i1.SmartFake
    implements _i22.GetSurahAudioUsecase {
  _FakeGetSurahAudioUsecase_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerseAudioState_44 extends _i1.SmartFake
    implements _i27.VerseAudioState {
  _FakeVerseAudioState_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i13.Dio {
  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i32.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i32.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i32.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i32.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);
}

/// A class which mocks [AudioPlayer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioPlayer extends _i1.Mock implements _i7.AudioPlayer {
  @override
  _i7.AudioCache get audioCache => (super.noSuchMethod(
        Invocation.getter(#audioCache),
        returnValue: _FakeAudioCache_5(
          this,
          Invocation.getter(#audioCache),
        ),
        returnValueForMissingStub: _FakeAudioCache_5(
          this,
          Invocation.getter(#audioCache),
        ),
      ) as _i7.AudioCache);

  @override
  set audioCache(_i7.AudioCache? _audioCache) => super.noSuchMethod(
        Invocation.setter(
          #audioCache,
          _audioCache,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get playerId => (super.noSuchMethod(
        Invocation.getter(#playerId),
        returnValue: _i33.dummyValue<String>(
          this,
          Invocation.getter(#playerId),
        ),
        returnValueForMissingStub: _i33.dummyValue<String>(
          this,
          Invocation.getter(#playerId),
        ),
      ) as String);

  @override
  _i8.Completer<void> get creatingCompleter => (super.noSuchMethod(
        Invocation.getter(#creatingCompleter),
        returnValue: _FakeCompleter_6<void>(
          this,
          Invocation.getter(#creatingCompleter),
        ),
        returnValueForMissingStub: _FakeCompleter_6<void>(
          this,
          Invocation.getter(#creatingCompleter),
        ),
      ) as _i8.Completer<void>);

  @override
  double get volume => (super.noSuchMethod(
        Invocation.getter(#volume),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get playbackRate => (super.noSuchMethod(
        Invocation.getter(#playbackRate),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i7.PlayerMode get mode => (super.noSuchMethod(
        Invocation.getter(#mode),
        returnValue: _i7.PlayerMode.mediaPlayer,
        returnValueForMissingStub: _i7.PlayerMode.mediaPlayer,
      ) as _i7.PlayerMode);

  @override
  _i7.ReleaseMode get releaseMode => (super.noSuchMethod(
        Invocation.getter(#releaseMode),
        returnValue: _i7.ReleaseMode.release,
        returnValueForMissingStub: _i7.ReleaseMode.release,
      ) as _i7.ReleaseMode);

  @override
  _i7.PlayerState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i7.PlayerState.stopped,
        returnValueForMissingStub: _i7.PlayerState.stopped,
      ) as _i7.PlayerState);

  @override
  set state(_i7.PlayerState? state) => super.noSuchMethod(
        Invocation.setter(
          #state,
          state,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Stream<_i7.AudioEvent> get eventStream => (super.noSuchMethod(
        Invocation.getter(#eventStream),
        returnValue: _i8.Stream<_i7.AudioEvent>.empty(),
        returnValueForMissingStub: _i8.Stream<_i7.AudioEvent>.empty(),
      ) as _i8.Stream<_i7.AudioEvent>);

  @override
  _i8.Stream<_i7.PlayerState> get onPlayerStateChanged => (super.noSuchMethod(
        Invocation.getter(#onPlayerStateChanged),
        returnValue: _i8.Stream<_i7.PlayerState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i7.PlayerState>.empty(),
      ) as _i8.Stream<_i7.PlayerState>);

  @override
  _i8.Stream<Duration> get onPositionChanged => (super.noSuchMethod(
        Invocation.getter(#onPositionChanged),
        returnValue: _i8.Stream<Duration>.empty(),
        returnValueForMissingStub: _i8.Stream<Duration>.empty(),
      ) as _i8.Stream<Duration>);

  @override
  _i8.Stream<Duration> get onDurationChanged => (super.noSuchMethod(
        Invocation.getter(#onDurationChanged),
        returnValue: _i8.Stream<Duration>.empty(),
        returnValueForMissingStub: _i8.Stream<Duration>.empty(),
      ) as _i8.Stream<Duration>);

  @override
  _i8.Stream<void> get onPlayerComplete => (super.noSuchMethod(
        Invocation.getter(#onPlayerComplete),
        returnValue: _i8.Stream<void>.empty(),
        returnValueForMissingStub: _i8.Stream<void>.empty(),
      ) as _i8.Stream<void>);

  @override
  _i8.Stream<void> get onSeekComplete => (super.noSuchMethod(
        Invocation.getter(#onSeekComplete),
        returnValue: _i8.Stream<void>.empty(),
        returnValueForMissingStub: _i8.Stream<void>.empty(),
      ) as _i8.Stream<void>);

  @override
  _i8.Stream<String> get onLog => (super.noSuchMethod(
        Invocation.getter(#onLog),
        returnValue: _i8.Stream<String>.empty(),
        returnValueForMissingStub: _i8.Stream<String>.empty(),
      ) as _i8.Stream<String>);

  @override
  _i8.Future<void> play(
    _i7.Source? source, {
    double? volume,
    double? balance,
    _i7.AudioContext? ctx,
    Duration? position,
    _i7.PlayerMode? mode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #play,
          [source],
          {
            #volume: volume,
            #balance: balance,
            #ctx: ctx,
            #position: position,
            #mode: mode,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setAudioContext(_i7.AudioContext? ctx) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioContext,
          [ctx],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setPlayerMode(_i7.PlayerMode? mode) => (super.noSuchMethod(
        Invocation.method(
          #setPlayerMode,
          [mode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> resume() => (super.noSuchMethod(
        Invocation.method(
          #resume,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> release() => (super.noSuchMethod(
        Invocation.method(
          #release,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> seek(Duration? position) => (super.noSuchMethod(
        Invocation.method(
          #seek,
          [position],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setBalance(double? balance) => (super.noSuchMethod(
        Invocation.method(
          #setBalance,
          [balance],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setReleaseMode(_i7.ReleaseMode? releaseMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReleaseMode,
          [releaseMode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setPlaybackRate(double? playbackRate) => (super.noSuchMethod(
        Invocation.method(
          #setPlaybackRate,
          [playbackRate],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSource(_i7.Source? source) => (super.noSuchMethod(
        Invocation.method(
          #setSource,
          [source],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSourceUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #setSourceUrl,
          [url],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSourceDeviceFile(String? path) => (super.noSuchMethod(
        Invocation.method(
          #setSourceDeviceFile,
          [path],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSourceAsset(String? path) => (super.noSuchMethod(
        Invocation.method(
          #setSourceAsset,
          [path],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSourceBytes(_i34.Uint8List? bytes) => (super.noSuchMethod(
        Invocation.method(
          #setSourceBytes,
          [bytes],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<Duration?> getDuration() => (super.noSuchMethod(
        Invocation.method(
          #getDuration,
          [],
        ),
        returnValue: _i8.Future<Duration?>.value(),
        returnValueForMissingStub: _i8.Future<Duration?>.value(),
      ) as _i8.Future<Duration?>);

  @override
  _i8.Future<Duration?> getCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
        ),
        returnValue: _i8.Future<Duration?>.value(),
        returnValueForMissingStub: _i8.Future<Duration?>.value(),
      ) as _i8.Future<Duration?>);

  @override
  _i8.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [PrayerTimes].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrayerTimes extends _i1.Mock implements _i35.PrayerTimes {
  @override
  _i9.Coordinates get coordinates => (super.noSuchMethod(
        Invocation.getter(#coordinates),
        returnValue: _FakeCoordinates_7(
          this,
          Invocation.getter(#coordinates),
        ),
        returnValueForMissingStub: _FakeCoordinates_7(
          this,
          Invocation.getter(#coordinates),
        ),
      ) as _i9.Coordinates);

  @override
  _i10.CalculationParameters get calculationParameters => (super.noSuchMethod(
        Invocation.getter(#calculationParameters),
        returnValue: _FakeCalculationParameters_8(
          this,
          Invocation.getter(#calculationParameters),
        ),
        returnValueForMissingStub: _FakeCalculationParameters_8(
          this,
          Invocation.getter(#calculationParameters),
        ),
      ) as _i10.CalculationParameters);

  @override
  DateTime get fajr => (super.noSuchMethod(
        Invocation.getter(#fajr),
        returnValue: _FakeDateTime_9(
          this,
          Invocation.getter(#fajr),
        ),
        returnValueForMissingStub: _FakeDateTime_9(
          this,
          Invocation.getter(#fajr),
        ),
      ) as DateTime);

  @override
  DateTime get sunrise => (super.noSuchMethod(
        Invocation.getter(#sunrise),
        returnValue: _FakeDateTime_9(
          this,
          Invocation.getter(#sunrise),
        ),
        returnValueForMissingStub: _FakeDateTime_9(
          this,
          Invocation.getter(#sunrise),
        ),
      ) as DateTime);

  @override
  DateTime get dhuhr => (super.noSuchMethod(
        Invocation.getter(#dhuhr),
        returnValue: _FakeDateTime_9(
          this,
          Invocation.getter(#dhuhr),
        ),
        returnValueForMissingStub: _FakeDateTime_9(
          this,
          Invocation.getter(#dhuhr),
        ),
      ) as DateTime);

  @override
  DateTime get asr => (super.noSuchMethod(
        Invocation.getter(#asr),
        returnValue: _FakeDateTime_9(
          this,
          Invocation.getter(#asr),
        ),
        returnValueForMissingStub: _FakeDateTime_9(
          this,
          Invocation.getter(#asr),
        ),
      ) as DateTime);

  @override
  DateTime get maghrib => (super.noSuchMethod(
        Invocation.getter(#maghrib),
        returnValue: _FakeDateTime_9(
          this,
          Invocation.getter(#maghrib),
        ),
        returnValueForMissingStub: _FakeDateTime_9(
          this,
          Invocation.getter(#maghrib),
        ),
      ) as DateTime);

  @override
  DateTime get isha => (super.noSuchMethod(
        Invocation.getter(#isha),
        returnValue: _FakeDateTime_9(
          this,
          Invocation.getter(#isha),
        ),
        returnValueForMissingStub: _FakeDateTime_9(
          this,
          Invocation.getter(#isha),
        ),
      ) as DateTime);

  @override
  _i11.DateComponents get dateComponents => (super.noSuchMethod(
        Invocation.getter(#dateComponents),
        returnValue: _FakeDateComponents_10(
          this,
          Invocation.getter(#dateComponents),
        ),
        returnValueForMissingStub: _FakeDateComponents_10(
          this,
          Invocation.getter(#dateComponents),
        ),
      ) as _i11.DateComponents);

  @override
  _i36.Prayer currentPrayer() => (super.noSuchMethod(
        Invocation.method(
          #currentPrayer,
          [],
        ),
        returnValue: _i36.Prayer.none,
        returnValueForMissingStub: _i36.Prayer.none,
      ) as _i36.Prayer);

  @override
  _i36.Prayer currentPrayerByDateTime(DateTime? time) => (super.noSuchMethod(
        Invocation.method(
          #currentPrayerByDateTime,
          [time],
        ),
        returnValue: _i36.Prayer.none,
        returnValueForMissingStub: _i36.Prayer.none,
      ) as _i36.Prayer);

  @override
  _i36.Prayer nextPrayer() => (super.noSuchMethod(
        Invocation.method(
          #nextPrayer,
          [],
        ),
        returnValue: _i36.Prayer.none,
        returnValueForMissingStub: _i36.Prayer.none,
      ) as _i36.Prayer);

  @override
  _i36.Prayer nextPrayerByDateTime(DateTime? time) => (super.noSuchMethod(
        Invocation.method(
          #nextPrayerByDateTime,
          [time],
        ),
        returnValue: _i36.Prayer.none,
        returnValueForMissingStub: _i36.Prayer.none,
      ) as _i36.Prayer);

  @override
  DateTime? timeForPrayer(_i36.Prayer? prayer) => (super.noSuchMethod(
        Invocation.method(
          #timeForPrayer,
          [prayer],
        ),
        returnValueForMissingStub: null,
      ) as DateTime?);
}

/// A class which mocks [Position].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockPosition extends _i1.Mock implements _i16.Position {
  @override
  double get latitude => (super.noSuchMethod(
        Invocation.getter(#latitude),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get longitude => (super.noSuchMethod(
        Invocation.getter(#longitude),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  DateTime get timestamp => (super.noSuchMethod(
        Invocation.getter(#timestamp),
        returnValue: _FakeDateTime_9(
          this,
          Invocation.getter(#timestamp),
        ),
        returnValueForMissingStub: _FakeDateTime_9(
          this,
          Invocation.getter(#timestamp),
        ),
      ) as DateTime);

  @override
  double get altitude => (super.noSuchMethod(
        Invocation.getter(#altitude),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get altitudeAccuracy => (super.noSuchMethod(
        Invocation.getter(#altitudeAccuracy),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get accuracy => (super.noSuchMethod(
        Invocation.getter(#accuracy),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get heading => (super.noSuchMethod(
        Invocation.getter(#heading),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get headingAccuracy => (super.noSuchMethod(
        Invocation.getter(#headingAccuracy),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get speed => (super.noSuchMethod(
        Invocation.getter(#speed),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get speedAccuracy => (super.noSuchMethod(
        Invocation.getter(#speedAccuracy),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  bool get isMocked => (super.noSuchMethod(
        Invocation.getter(#isMocked),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Geolocator].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocator extends _i1.Mock implements _i37.Geolocator {}

/// A class which mocks [AudioPlayerManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioPlayerManager extends _i1.Mock
    implements _i14.AudioPlayerManager {
  @override
  _i7.AudioPlayer verseAudio(String? verseNumber) => (super.noSuchMethod(
        Invocation.method(
          #verseAudio,
          [verseNumber],
        ),
        returnValue: _FakeAudioPlayer_11(
          this,
          Invocation.method(
            #verseAudio,
            [verseNumber],
          ),
        ),
        returnValueForMissingStub: _FakeAudioPlayer_11(
          this,
          Invocation.method(
            #verseAudio,
            [verseNumber],
          ),
        ),
      ) as _i7.AudioPlayer);

  @override
  void stopAllExcept(String? verseNumber) => super.noSuchMethod(
        Invocation.method(
          #stopAllExcept,
          [verseNumber],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopAll() => super.noSuchMethod(
        Invocation.method(
          #stopAll,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i14.DioClient {
  @override
  _i8.Future<_i6.Response<dynamic>> get(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
    _i2.ProgressCallback? onSendProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
            #onSendProgress: onSendProgress,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<dynamic>> post(
    String? url, {
    Map<String, dynamic>? queryParameters,
    dynamic data,
    _i2.Options? options,
    _i32.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
    _i2.ProgressCallback? onSendProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #queryParameters: queryParameters,
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
            #onSendProgress: onSendProgress,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #queryParameters: queryParameters,
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #queryParameters: queryParameters,
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<dynamic>> put(
    String? url, {
    Map<String, dynamic>? queryParameters,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #queryParameters: queryParameters,
            #data: data,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #queryParameters: queryParameters,
              #data: data,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #queryParameters: queryParameters,
              #data: data,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<dynamic>> delete(
    String? url, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#queryParameters: queryParameters},
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);
}

/// A class which mocks [CustomInterceptor].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomInterceptor extends _i1.Mock implements _i14.CustomInterceptor {
  @override
  _i12.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_12(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_12(
          this,
          Invocation.getter(#log),
        ),
      ) as _i12.Logger);

  @override
  _i13.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_13(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_13(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i13.Dio);

  @override
  set dio(_i13.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.RequestRetrier get requestRetrier => (super.noSuchMethod(
        Invocation.getter(#requestRetrier),
        returnValue: _FakeRequestRetrier_14(
          this,
          Invocation.getter(#requestRetrier),
        ),
        returnValueForMissingStub: _FakeRequestRetrier_14(
          this,
          Invocation.getter(#requestRetrier),
        ),
      ) as _i14.RequestRetrier);

  @override
  set requestRetrier(_i14.RequestRetrier? _requestRetrier) =>
      super.noSuchMethod(
        Invocation.setter(
          #requestRetrier,
          _requestRetrier,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onRequest(
    _i2.RequestOptions? options,
    _i5.RequestInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onRequest,
          [
            options,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onResponse(
    _i6.Response<dynamic>? response,
    _i5.ResponseInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onResponse,
          [
            response,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    _i13.DioException? err,
    _i5.ErrorInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            err,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isBadRequest(_i13.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isBadRequest,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isUnauthorized(_i13.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isUnauthorized,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isForbidden(_i13.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isForbidden,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isNotFound(_i13.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isNotFound,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isConnectionError(_i13.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isConnectionError,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [RequestRetrier].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestRetrier extends _i1.Mock implements _i14.RequestRetrier {
  @override
  _i13.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_13(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_13(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i13.Dio);

  @override
  _i15.InternetConnectionChecker get internetConnectionChecker =>
      (super.noSuchMethod(
        Invocation.getter(#internetConnectionChecker),
        returnValue: _FakeInternetConnectionChecker_15(
          this,
          Invocation.getter(#internetConnectionChecker),
        ),
        returnValueForMissingStub: _FakeInternetConnectionChecker_15(
          this,
          Invocation.getter(#internetConnectionChecker),
        ),
      ) as _i15.InternetConnectionChecker);

  @override
  _i8.Future<_i6.Response<dynamic>> retryRequest(
          _i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #retryRequest,
          [requestOptions],
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #retryRequest,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #retryRequest,
            [requestOptions],
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);
}

/// A class which mocks [UserLocation].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocation extends _i1.Mock implements _i14.UserLocation {
  @override
  _i8.Future<bool> isLocationServiceEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isLocationServiceEnabled,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i16.LocationPermission> checkPermission() => (super.noSuchMethod(
        Invocation.method(
          #checkPermission,
          [],
        ),
        returnValue: _i8.Future<_i16.LocationPermission>.value(
            _i16.LocationPermission.denied),
        returnValueForMissingStub: _i8.Future<_i16.LocationPermission>.value(
            _i16.LocationPermission.denied),
      ) as _i8.Future<_i16.LocationPermission>);

  @override
  _i8.Future<_i16.LocationPermission> requestPermission() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
        ),
        returnValue: _i8.Future<_i16.LocationPermission>.value(
            _i16.LocationPermission.denied),
        returnValueForMissingStub: _i8.Future<_i16.LocationPermission>.value(
            _i16.LocationPermission.denied),
      ) as _i8.Future<_i16.LocationPermission>);

  @override
  _i8.Future<_i16.Position> getCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
        ),
        returnValue: _i8.Future<_i16.Position>.value(_FakePosition_16(
          this,
          Invocation.method(
            #getCurrentPosition,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i16.Position>.value(_FakePosition_16(
          this,
          Invocation.method(
            #getCurrentPosition,
            [],
          ),
        )),
      ) as _i8.Future<_i16.Position>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i14.DatabaseHelper {
  @override
  _i8.Future<_i17.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i8.Future<_i17.Database?>.value(),
        returnValueForMissingStub: _i8.Future<_i17.Database?>.value(),
      ) as _i8.Future<_i17.Database?>);

  @override
  _i8.Future<_i17.Database> initDatabase() => (super.noSuchMethod(
        Invocation.method(
          #initDatabase,
          [],
        ),
        returnValue: _i8.Future<_i17.Database>.value(_FakeDatabase_17(
          this,
          Invocation.method(
            #initDatabase,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i17.Database>.value(_FakeDatabase_17(
          this,
          Invocation.method(
            #initDatabase,
            [],
          ),
        )),
      ) as _i8.Future<_i17.Database>);

  @override
  _i8.Future<int> insertBookmark(_i38.BookmarkTable? bookmarkTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertBookmark,
          [bookmarkTable],
        ),
        returnValue: _i8.Future<int>.value(0),
        returnValueForMissingStub: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> removeBookmark(_i38.BookmarkTable? bookmark) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeBookmark,
          [bookmark],
        ),
        returnValue: _i8.Future<int>.value(0),
        returnValueForMissingStub: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getBookmarks() => (super.noSuchMethod(
        Invocation.method(
          #getBookmarks,
          [],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<Map<String, dynamic>?> getBookmarkById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookmarkById,
          [id],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);
}

/// A class which mocks [SurahRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahRemoteDataSource extends _i1.Mock
    implements _i18.SurahRemoteDataSource {
  @override
  _i8.Future<_i18.SurahRes> getSurahs() => (super.noSuchMethod(
        Invocation.method(
          #getSurahs,
          [],
        ),
        returnValue: _i8.Future<_i18.SurahRes>.value(_FakeSurahRes_18(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i18.SurahRes>.value(_FakeSurahRes_18(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
      ) as _i8.Future<_i18.SurahRes>);
}

/// A class which mocks [DetailSurahRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailSurahRemoteDataSource extends _i1.Mock
    implements _i27.DetailSurahRemoteDataSource {
  @override
  _i8.Future<_i19.SurahDetailResModel> getDetailSurah(int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailSurah,
          [surahNumber],
        ),
        returnValue: _i8.Future<_i19.SurahDetailResModel>.value(
            _FakeSurahDetailResModel_19(
          this,
          Invocation.method(
            #getDetailSurah,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i19.SurahDetailResModel>.value(
            _FakeSurahDetailResModel_19(
          this,
          Invocation.method(
            #getDetailSurah,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i19.SurahDetailResModel>);

  @override
  _i8.Future<_i19.AudioFileModel> getFullAudio(int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFullAudio,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i19.AudioFileModel>.value(_FakeAudioFileModel_20(
          this,
          Invocation.method(
            #getFullAudio,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i19.AudioFileModel>.value(_FakeAudioFileModel_20(
          this,
          Invocation.method(
            #getFullAudio,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i19.AudioFileModel>);
}

/// A class which mocks [AyahRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAyahRemoteDatasource extends _i1.Mock
    implements _i39.AyahRemoteDatasource {
  @override
  _i8.Future<_i20.AyahResModel> getAyah(
    int? surahNumber,
    int? ayahNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAyah,
          [
            surahNumber,
            ayahNumber,
          ],
        ),
        returnValue: _i8.Future<_i20.AyahResModel>.value(_FakeAyahResModel_21(
          this,
          Invocation.method(
            #getAyah,
            [
              surahNumber,
              ayahNumber,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i20.AyahResModel>.value(_FakeAyahResModel_21(
          this,
          Invocation.method(
            #getAyah,
            [
              surahNumber,
              ayahNumber,
            ],
          ),
        )),
      ) as _i8.Future<_i20.AyahResModel>);

  @override
  _i8.Future<_i20.AyahResModel> getRandomAyah() => (super.noSuchMethod(
        Invocation.method(
          #getRandomAyah,
          [],
        ),
        returnValue: _i8.Future<_i20.AyahResModel>.value(_FakeAyahResModel_21(
          this,
          Invocation.method(
            #getRandomAyah,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i20.AyahResModel>.value(_FakeAyahResModel_21(
          this,
          Invocation.method(
            #getRandomAyah,
            [],
          ),
        )),
      ) as _i8.Future<_i20.AyahResModel>);
}

/// A class which mocks [BookmarkLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkLocalDatasource extends _i1.Mock
    implements _i38.BookmarkLocalDatasource {
  @override
  _i8.Future<String> insertBookmark(_i38.BookmarkTable? bookmark) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertBookmark,
          [bookmark],
        ),
        returnValue: _i8.Future<String>.value(_i33.dummyValue<String>(
          this,
          Invocation.method(
            #insertBookmark,
            [bookmark],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<String>.value(_i33.dummyValue<String>(
          this,
          Invocation.method(
            #insertBookmark,
            [bookmark],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<String> removeBookmark(_i38.BookmarkTable? bookmark) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeBookmark,
          [bookmark],
        ),
        returnValue: _i8.Future<String>.value(_i33.dummyValue<String>(
          this,
          Invocation.method(
            #removeBookmark,
            [bookmark],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<String>.value(_i33.dummyValue<String>(
          this,
          Invocation.method(
            #removeBookmark,
            [bookmark],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<List<_i38.BookmarkTable>> getBookmarks() => (super.noSuchMethod(
        Invocation.method(
          #getBookmarks,
          [],
        ),
        returnValue:
            _i8.Future<List<_i38.BookmarkTable>>.value(<_i38.BookmarkTable>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i38.BookmarkTable>>.value(<_i38.BookmarkTable>[]),
      ) as _i8.Future<List<_i38.BookmarkTable>>);

  @override
  _i8.Future<_i38.BookmarkTable?> getBookmarkById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookmarkById,
          [id],
        ),
        returnValue: _i8.Future<_i38.BookmarkTable?>.value(),
        returnValueForMissingStub: _i8.Future<_i38.BookmarkTable?>.value(),
      ) as _i8.Future<_i38.BookmarkTable?>);
}

/// A class which mocks [BaseSurahRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseSurahRepository extends _i1.Mock
    implements _i23.BaseSurahRepository {
  @override
  _i8.Future<_i21.Either<_i14.Failure, _i23.SurahResEntity>> getSurahs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurahs,
          [],
        ),
        returnValue:
            _i8.Future<_i21.Either<_i14.Failure, _i23.SurahResEntity>>.value(
                _FakeEither_22<_i14.Failure, _i23.SurahResEntity>(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i23.SurahResEntity>>.value(
                _FakeEither_22<_i14.Failure, _i23.SurahResEntity>(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i23.SurahResEntity>>);
}

/// A class which mocks [SurahDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahDetailRepository extends _i1.Mock
    implements _i22.SurahDetailRepository {
  @override
  _i8.Future<_i21.Either<_i14.Failure, _i22.SurahDetailRes>> getDetailSurah(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailSurah,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i21.Either<_i14.Failure, _i22.SurahDetailRes>>.value(
                _FakeEither_22<_i14.Failure, _i22.SurahDetailRes>(
          this,
          Invocation.method(
            #getDetailSurah,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i22.SurahDetailRes>>.value(
                _FakeEither_22<_i14.Failure, _i22.SurahDetailRes>(
          this,
          Invocation.method(
            #getDetailSurah,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i22.SurahDetailRes>>);

  @override
  _i8.Future<_i21.Either<_i14.Failure, _i22.AudioFile>> getFullAudio(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFullAudio,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i21.Either<_i14.Failure, _i22.AudioFile>>.value(
                _FakeEither_22<_i14.Failure, _i22.AudioFile>(
          this,
          Invocation.method(
            #getFullAudio,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i22.AudioFile>>.value(
                _FakeEither_22<_i14.Failure, _i22.AudioFile>(
          this,
          Invocation.method(
            #getFullAudio,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i22.AudioFile>>);
}

/// A class which mocks [AyahRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAyahRepository extends _i1.Mock implements _i24.AyahRepository {
  @override
  _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>> getAyah(
    int? surahNumber,
    int? ayahNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAyah,
          [
            surahNumber,
            ayahNumber,
          ],
        ),
        returnValue: _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>.value(
            _FakeEither_22<_i14.Failure, _i24.AyahRes>(
          this,
          Invocation.method(
            #getAyah,
            [
              surahNumber,
              ayahNumber,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>.value(
                _FakeEither_22<_i14.Failure, _i24.AyahRes>(
          this,
          Invocation.method(
            #getAyah,
            [
              surahNumber,
              ayahNumber,
            ],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>);

  @override
  _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>> getRandomAyah() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRandomAyah,
          [],
        ),
        returnValue: _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>.value(
            _FakeEither_22<_i14.Failure, _i24.AyahRes>(
          this,
          Invocation.method(
            #getRandomAyah,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>.value(
                _FakeEither_22<_i14.Failure, _i24.AyahRes>(
          this,
          Invocation.method(
            #getRandomAyah,
            [],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>);
}

/// A class which mocks [BookmarkRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkRepository extends _i1.Mock
    implements _i25.BookmarkRepository {
  @override
  _i8.Future<_i21.Either<_i14.Failure, String>> insertBookmark(
    _i22.Verse? verse,
    String? surah,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertBookmark,
          [
            verse,
            surah,
          ],
        ),
        returnValue: _i8.Future<_i21.Either<_i14.Failure, String>>.value(
            _FakeEither_22<_i14.Failure, String>(
          this,
          Invocation.method(
            #insertBookmark,
            [
              verse,
              surah,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, String>>.value(
                _FakeEither_22<_i14.Failure, String>(
          this,
          Invocation.method(
            #insertBookmark,
            [
              verse,
              surah,
            ],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, String>>);

  @override
  _i8.Future<_i21.Either<_i14.Failure, String>> removeBookmark(
    _i22.Verse? verse,
    String? surah,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeBookmark,
          [
            verse,
            surah,
          ],
        ),
        returnValue: _i8.Future<_i21.Either<_i14.Failure, String>>.value(
            _FakeEither_22<_i14.Failure, String>(
          this,
          Invocation.method(
            #removeBookmark,
            [
              verse,
              surah,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, String>>.value(
                _FakeEither_22<_i14.Failure, String>(
          this,
          Invocation.method(
            #removeBookmark,
            [
              verse,
              surah,
            ],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, String>>);

  @override
  _i8.Future<_i21.Either<_i14.Failure, List<_i25.Bookmark>>> getBookmarks() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookmarks,
          [],
        ),
        returnValue:
            _i8.Future<_i21.Either<_i14.Failure, List<_i25.Bookmark>>>.value(
                _FakeEither_22<_i14.Failure, List<_i25.Bookmark>>(
          this,
          Invocation.method(
            #getBookmarks,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, List<_i25.Bookmark>>>.value(
                _FakeEither_22<_i14.Failure, List<_i25.Bookmark>>(
          this,
          Invocation.method(
            #getBookmarks,
            [],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, List<_i25.Bookmark>>>);

  @override
  _i8.Future<bool> isBookmarked(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isBookmarked,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
}

/// A class which mocks [GetSurahDetailUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSurahDetailUseCase extends _i1.Mock
    implements _i22.GetSurahDetailUseCase {
  @override
  _i22.SurahDetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSurahDetailRepository_23(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeSurahDetailRepository_23(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i22.SurahDetailRepository);

  @override
  _i8.Future<_i21.Either<_i14.Failure, _i22.SurahDetailRes>> execute(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i21.Either<_i14.Failure, _i22.SurahDetailRes>>.value(
                _FakeEither_22<_i14.Failure, _i22.SurahDetailRes>(
          this,
          Invocation.method(
            #execute,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i22.SurahDetailRes>>.value(
                _FakeEither_22<_i14.Failure, _i22.SurahDetailRes>(
          this,
          Invocation.method(
            #execute,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i22.SurahDetailRes>>);
}

/// A class which mocks [GetSurahsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSurahsUseCase extends _i1.Mock implements _i23.GetSurahsUseCase {
  @override
  _i23.BaseSurahRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeBaseSurahRepository_24(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeBaseSurahRepository_24(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i23.BaseSurahRepository);

  @override
  _i8.Future<_i21.Either<_i14.Failure, _i23.SurahResEntity>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i8.Future<_i21.Either<_i14.Failure, _i23.SurahResEntity>>.value(
                _FakeEither_22<_i14.Failure, _i23.SurahResEntity>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i23.SurahResEntity>>.value(
                _FakeEither_22<_i14.Failure, _i23.SurahResEntity>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i23.SurahResEntity>>);
}

/// A class which mocks [GetSurahAudioUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSurahAudioUsecase extends _i1.Mock
    implements _i22.GetSurahAudioUsecase {
  @override
  _i22.SurahDetailRepository get surahRepository => (super.noSuchMethod(
        Invocation.getter(#surahRepository),
        returnValue: _FakeSurahDetailRepository_23(
          this,
          Invocation.getter(#surahRepository),
        ),
        returnValueForMissingStub: _FakeSurahDetailRepository_23(
          this,
          Invocation.getter(#surahRepository),
        ),
      ) as _i22.SurahDetailRepository);

  @override
  _i8.Future<_i21.Either<_i14.Failure, _i22.AudioFile>> call(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i21.Either<_i14.Failure, _i22.AudioFile>>.value(
                _FakeEither_22<_i14.Failure, _i22.AudioFile>(
          this,
          Invocation.method(
            #call,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i22.AudioFile>>.value(
                _FakeEither_22<_i14.Failure, _i22.AudioFile>(
          this,
          Invocation.method(
            #call,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i22.AudioFile>>);
}

/// A class which mocks [GetAyahUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAyahUsecase extends _i1.Mock implements _i24.GetAyahUsecase {
  @override
  _i24.AyahRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAyahRepository_25(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeAyahRepository_25(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i24.AyahRepository);

  @override
  _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>> call(
    int? surahNumber,
    int? ayahNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            surahNumber,
            ayahNumber,
          ],
        ),
        returnValue: _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>.value(
            _FakeEither_22<_i14.Failure, _i24.AyahRes>(
          this,
          Invocation.method(
            #call,
            [
              surahNumber,
              ayahNumber,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>.value(
                _FakeEither_22<_i14.Failure, _i24.AyahRes>(
          this,
          Invocation.method(
            #call,
            [
              surahNumber,
              ayahNumber,
            ],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>);
}

/// A class which mocks [GetRandomAyahUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRandomAyahUsecase extends _i1.Mock
    implements _i24.GetRandomAyahUsecase {
  @override
  _i24.AyahRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAyahRepository_25(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeAyahRepository_25(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i24.AyahRepository);

  @override
  _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>.value(
            _FakeEither_22<_i14.Failure, _i24.AyahRes>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>.value(
                _FakeEither_22<_i14.Failure, _i24.AyahRes>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, _i24.AyahRes>>);
}

/// A class which mocks [GetBookmarksUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetBookmarksUsecase extends _i1.Mock
    implements _i25.GetBookmarksUsecase {
  @override
  _i25.BookmarkRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeBookmarkRepository_26(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeBookmarkRepository_26(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i25.BookmarkRepository);

  @override
  _i8.Future<_i21.Either<_i14.Failure, List<_i25.Bookmark>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i8.Future<_i21.Either<_i14.Failure, List<_i25.Bookmark>>>.value(
                _FakeEither_22<_i14.Failure, List<_i25.Bookmark>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, List<_i25.Bookmark>>>.value(
                _FakeEither_22<_i14.Failure, List<_i25.Bookmark>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, List<_i25.Bookmark>>>);
}

/// A class which mocks [AddBookmarkUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddBookmarkUsecase extends _i1.Mock
    implements _i25.AddBookmarkUsecase {
  @override
  _i25.BookmarkRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeBookmarkRepository_26(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeBookmarkRepository_26(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i25.BookmarkRepository);

  @override
  _i8.Future<_i21.Either<_i14.Failure, String>> call(
    _i22.Verse? verse,
    String? surah,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            verse,
            surah,
          ],
        ),
        returnValue: _i8.Future<_i21.Either<_i14.Failure, String>>.value(
            _FakeEither_22<_i14.Failure, String>(
          this,
          Invocation.method(
            #call,
            [
              verse,
              surah,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, String>>.value(
                _FakeEither_22<_i14.Failure, String>(
          this,
          Invocation.method(
            #call,
            [
              verse,
              surah,
            ],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, String>>);
}

/// A class which mocks [RemoveBookmarkUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveBookmarkUsecase extends _i1.Mock
    implements _i25.RemoveBookmarkUsecase {
  @override
  _i25.BookmarkRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeBookmarkRepository_26(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeBookmarkRepository_26(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i25.BookmarkRepository);

  @override
  _i8.Future<_i21.Either<_i14.Failure, String>> call(
    _i22.Verse? verse,
    String? surah,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            verse,
            surah,
          ],
        ),
        returnValue: _i8.Future<_i21.Either<_i14.Failure, String>>.value(
            _FakeEither_22<_i14.Failure, String>(
          this,
          Invocation.method(
            #call,
            [
              verse,
              surah,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i21.Either<_i14.Failure, String>>.value(
                _FakeEither_22<_i14.Failure, String>(
          this,
          Invocation.method(
            #call,
            [
              verse,
              surah,
            ],
          ),
        )),
      ) as _i8.Future<_i21.Either<_i14.Failure, String>>);
}

/// A class which mocks [IsBookmarkUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsBookmarkUsecase extends _i1.Mock implements _i25.IsBookmarkUsecase {
  @override
  _i25.BookmarkRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeBookmarkRepository_26(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeBookmarkRepository_26(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i25.BookmarkRepository);

  @override
  _i8.Future<bool> call(int? id) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
}

/// A class which mocks [SurahBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahBloc extends _i1.Mock implements _i26.SurahBloc {
  @override
  _i23.GetSurahsUseCase get getSurahsUseCase => (super.noSuchMethod(
        Invocation.getter(#getSurahsUseCase),
        returnValue: _FakeGetSurahsUseCase_27(
          this,
          Invocation.getter(#getSurahsUseCase),
        ),
        returnValueForMissingStub: _FakeGetSurahsUseCase_27(
          this,
          Invocation.getter(#getSurahsUseCase),
        ),
      ) as _i23.GetSurahsUseCase);

  @override
  _i26.SurahState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSurahState_28(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeSurahState_28(
          this,
          Invocation.getter(#state),
        ),
      ) as _i26.SurahState);

  @override
  _i8.Stream<_i26.SurahState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i26.SurahState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i26.SurahState>.empty(),
      ) as _i8.Stream<_i26.SurahState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void add(_i26.SurahEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i26.SurahEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i26.SurahState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i26.SurahEvent>(
    _i40.EventHandler<E, _i26.SurahState>? handler, {
    _i40.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i40.Transition<_i26.SurahEvent, _i26.SurahState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void onChange(_i40.Change<_i26.SurahState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DetailSurahBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailSurahBloc extends _i1.Mock implements _i27.DetailSurahBloc {
  @override
  _i22.GetSurahDetailUseCase get getSurahDetailUsecase => (super.noSuchMethod(
        Invocation.getter(#getSurahDetailUsecase),
        returnValue: _FakeGetSurahDetailUseCase_29(
          this,
          Invocation.getter(#getSurahDetailUsecase),
        ),
        returnValueForMissingStub: _FakeGetSurahDetailUseCase_29(
          this,
          Invocation.getter(#getSurahDetailUsecase),
        ),
      ) as _i22.GetSurahDetailUseCase);

  @override
  _i27.DetailSurahState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDetailSurahState_30(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeDetailSurahState_30(
          this,
          Invocation.getter(#state),
        ),
      ) as _i27.DetailSurahState);

  @override
  _i8.Stream<_i27.DetailSurahState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i27.DetailSurahState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i27.DetailSurahState>.empty(),
      ) as _i8.Stream<_i27.DetailSurahState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void add(_i27.DetailSurahEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i27.DetailSurahEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i27.DetailSurahState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i27.DetailSurahEvent>(
    _i40.EventHandler<E, _i27.DetailSurahState>? handler, {
    _i40.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i40.Transition<_i27.DetailSurahEvent, _i27.DetailSurahState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void onChange(_i40.Change<_i27.DetailSurahState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AyahsBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockAyahsBloc extends _i1.Mock implements _i28.AyahsBloc {
  @override
  _i24.GetAyahUsecase get getAyahUsecase => (super.noSuchMethod(
        Invocation.getter(#getAyahUsecase),
        returnValue: _FakeGetAyahUsecase_31(
          this,
          Invocation.getter(#getAyahUsecase),
        ),
        returnValueForMissingStub: _FakeGetAyahUsecase_31(
          this,
          Invocation.getter(#getAyahUsecase),
        ),
      ) as _i24.GetAyahUsecase);

  @override
  _i24.GetRandomAyahUsecase get getRandomAyahUsecase => (super.noSuchMethod(
        Invocation.getter(#getRandomAyahUsecase),
        returnValue: _FakeGetRandomAyahUsecase_32(
          this,
          Invocation.getter(#getRandomAyahUsecase),
        ),
        returnValueForMissingStub: _FakeGetRandomAyahUsecase_32(
          this,
          Invocation.getter(#getRandomAyahUsecase),
        ),
      ) as _i24.GetRandomAyahUsecase);

  @override
  _i28.AyahsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAyahsState_33(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAyahsState_33(
          this,
          Invocation.getter(#state),
        ),
      ) as _i28.AyahsState);

  @override
  _i8.Stream<_i28.AyahsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i28.AyahsState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i28.AyahsState>.empty(),
      ) as _i8.Stream<_i28.AyahsState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void add(_i28.AyahsEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i28.AyahsEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i28.AyahsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i28.AyahsEvent>(
    _i40.EventHandler<E, _i28.AyahsState>? handler, {
    _i40.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i40.Transition<_i28.AyahsEvent, _i28.AyahsState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void onChange(_i40.Change<_i28.AyahsState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BookmarkBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkBloc extends _i1.Mock implements _i29.BookmarkBloc {
  @override
  _i25.GetBookmarksUsecase get usecase => (super.noSuchMethod(
        Invocation.getter(#usecase),
        returnValue: _FakeGetBookmarksUsecase_34(
          this,
          Invocation.getter(#usecase),
        ),
        returnValueForMissingStub: _FakeGetBookmarksUsecase_34(
          this,
          Invocation.getter(#usecase),
        ),
      ) as _i25.GetBookmarksUsecase);

  @override
  _i25.IsBookmarkUsecase get isBookmarkUsecase => (super.noSuchMethod(
        Invocation.getter(#isBookmarkUsecase),
        returnValue: _FakeIsBookmarkUsecase_35(
          this,
          Invocation.getter(#isBookmarkUsecase),
        ),
        returnValueForMissingStub: _FakeIsBookmarkUsecase_35(
          this,
          Invocation.getter(#isBookmarkUsecase),
        ),
      ) as _i25.IsBookmarkUsecase);

  @override
  _i25.AddBookmarkUsecase get addBookmarkUsecase => (super.noSuchMethod(
        Invocation.getter(#addBookmarkUsecase),
        returnValue: _FakeAddBookmarkUsecase_36(
          this,
          Invocation.getter(#addBookmarkUsecase),
        ),
        returnValueForMissingStub: _FakeAddBookmarkUsecase_36(
          this,
          Invocation.getter(#addBookmarkUsecase),
        ),
      ) as _i25.AddBookmarkUsecase);

  @override
  _i25.RemoveBookmarkUsecase get removeBookmarkUsecase => (super.noSuchMethod(
        Invocation.getter(#removeBookmarkUsecase),
        returnValue: _FakeRemoveBookmarkUsecase_37(
          this,
          Invocation.getter(#removeBookmarkUsecase),
        ),
        returnValueForMissingStub: _FakeRemoveBookmarkUsecase_37(
          this,
          Invocation.getter(#removeBookmarkUsecase),
        ),
      ) as _i25.RemoveBookmarkUsecase);

  @override
  _i29.BookmarkState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeBookmarkState_38(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeBookmarkState_38(
          this,
          Invocation.getter(#state),
        ),
      ) as _i29.BookmarkState);

  @override
  _i8.Stream<_i29.BookmarkState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i29.BookmarkState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i29.BookmarkState>.empty(),
      ) as _i8.Stream<_i29.BookmarkState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void add(_i29.BookmarkEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i29.BookmarkEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i29.BookmarkState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i29.BookmarkEvent>(
    _i40.EventHandler<E, _i29.BookmarkState>? handler, {
    _i40.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i40.Transition<_i29.BookmarkEvent, _i29.BookmarkState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void onChange(_i40.Change<_i29.BookmarkState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppbarBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppbarBloc extends _i1.Mock implements _i30.AppbarBloc {
  @override
  _i30.AppbarState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAppbarState_39(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAppbarState_39(
          this,
          Invocation.getter(#state),
        ),
      ) as _i30.AppbarState);

  @override
  _i8.Stream<_i30.AppbarState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i30.AppbarState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i30.AppbarState>.empty(),
      ) as _i8.Stream<_i30.AppbarState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void add(_i30.AppbarEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i30.AppbarEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i30.AppbarState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i30.AppbarEvent>(
    _i40.EventHandler<E, _i30.AppbarState>? handler, {
    _i40.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i40.Transition<_i30.AppbarEvent, _i30.AppbarState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void onChange(_i40.Change<_i30.AppbarState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PrayerTimeCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrayerTimeCubit extends _i1.Mock implements _i31.PrayerTimeCubit {
  @override
  _i14.UserLocation get location => (super.noSuchMethod(
        Invocation.getter(#location),
        returnValue: _FakeUserLocation_40(
          this,
          Invocation.getter(#location),
        ),
        returnValueForMissingStub: _FakeUserLocation_40(
          this,
          Invocation.getter(#location),
        ),
      ) as _i14.UserLocation);

  @override
  _i31.PrayerTimeState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakePrayerTimeState_41(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakePrayerTimeState_41(
          this,
          Invocation.getter(#state),
        ),
      ) as _i31.PrayerTimeState);

  @override
  _i8.Stream<_i31.PrayerTimeState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i31.PrayerTimeState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i31.PrayerTimeState>.empty(),
      ) as _i8.Stream<_i31.PrayerTimeState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i8.Future<void> getLoc() => (super.noSuchMethod(
        Invocation.method(
          #getLoc,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String> getAddressFromCoordinates(
    double? lat,
    double? long,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressFromCoordinates,
          [
            lat,
            long,
          ],
        ),
        returnValue: _i8.Future<String>.value(_i33.dummyValue<String>(
          this,
          Invocation.method(
            #getAddressFromCoordinates,
            [
              lat,
              long,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<String>.value(_i33.dummyValue<String>(
          this,
          Invocation.method(
            #getAddressFromCoordinates,
            [
              lat,
              long,
            ],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  void emit(_i31.PrayerTimeState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i40.Change<_i31.PrayerTimeState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [VerseAudioCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerseAudioCubit extends _i1.Mock implements _i27.VerseAudioCubit {
  @override
  _i14.AudioPlayerManager get audioPlayerManager => (super.noSuchMethod(
        Invocation.getter(#audioPlayerManager),
        returnValue: _FakeAudioPlayerManager_42(
          this,
          Invocation.getter(#audioPlayerManager),
        ),
        returnValueForMissingStub: _FakeAudioPlayerManager_42(
          this,
          Invocation.getter(#audioPlayerManager),
        ),
      ) as _i14.AudioPlayerManager);

  @override
  _i22.GetSurahAudioUsecase get getSurahAudioUsecase => (super.noSuchMethod(
        Invocation.getter(#getSurahAudioUsecase),
        returnValue: _FakeGetSurahAudioUsecase_43(
          this,
          Invocation.getter(#getSurahAudioUsecase),
        ),
        returnValueForMissingStub: _FakeGetSurahAudioUsecase_43(
          this,
          Invocation.getter(#getSurahAudioUsecase),
        ),
      ) as _i22.GetSurahAudioUsecase);

  @override
  set player(_i7.AudioPlayer? _player) => super.noSuchMethod(
        Invocation.setter(
          #player,
          _player,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_12(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_12(
          this,
          Invocation.getter(#log),
        ),
      ) as _i12.Logger);

  @override
  int get currentIndex => (super.noSuchMethod(
        Invocation.getter(#currentIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set currentIndex(int? _currentIndex) => super.noSuchMethod(
        Invocation.setter(
          #currentIndex,
          _currentIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.PlayerState get playerState => (super.noSuchMethod(
        Invocation.getter(#playerState),
        returnValue: _i7.PlayerState.stopped,
        returnValueForMissingStub: _i7.PlayerState.stopped,
      ) as _i7.PlayerState);

  @override
  set playerState(_i7.PlayerState? _playerState) => super.noSuchMethod(
        Invocation.setter(
          #playerState,
          _playerState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i27.VerseAudioState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeVerseAudioState_44(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeVerseAudioState_44(
          this,
          Invocation.getter(#state),
        ),
      ) as _i27.VerseAudioState);

  @override
  _i8.Stream<_i27.VerseAudioState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i27.VerseAudioState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i27.VerseAudioState>.empty(),
      ) as _i8.Stream<_i27.VerseAudioState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i8.Future<void> playVerse(
    String? verseNumber,
    String? audioSource,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #playVerse,
          [
            verseNumber,
            audioSource,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> playAllVerse(int? surahNumber) => (super.noSuchMethod(
        Invocation.method(
          #playAllVerse,
          [surahNumber],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> resetVerse() => (super.noSuchMethod(
        Invocation.method(
          #resetVerse,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> stopVerse() => (super.noSuchMethod(
        Invocation.method(
          #stopVerse,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void emit(_i27.VerseAudioState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i40.Change<_i27.VerseAudioState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
