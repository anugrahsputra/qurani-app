// Mocks generated by Mockito 5.4.4 from annotations
// in qurani/test/helper/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:typed_data' as _i21;

import 'package:audioplayers/audioplayers.dart' as _i7;
import 'package:bloc/bloc.dart' as _i23;
import 'package:dartz/dartz.dart' as _i15;
import 'package:dio/dio.dart' as _i10;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i19;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i12;
import 'package:logging/logging.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i20;
import 'package:qurani/core/core.dart' as _i11;
import 'package:qurani/features/detail_surah/data/datasources/remote_datasource.dart'
    as _i22;
import 'package:qurani/features/detail_surah/data/models/models.dart' as _i14;
import 'package:qurani/features/detail_surah/domain/domain.dart' as _i16;
import 'package:qurani/features/surah/data/data.dart' as _i13;
import 'package:qurani/features/surah/domain/domain.dart' as _i17;
import 'package:qurani/features/surah/logic/blocs/surahs/surah_bloc.dart'
    as _i18;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioCache_5 extends _i1.SmartFake implements _i7.AudioCache {
  _FakeAudioCache_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompleter_6<T> extends _i1.SmartFake implements _i8.Completer<T> {
  _FakeCompleter_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioPlayer_7 extends _i1.SmartFake implements _i7.AudioPlayer {
  _FakeAudioPlayer_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_8 extends _i1.SmartFake implements _i9.Logger {
  _FakeLogger_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_9 extends _i1.SmartFake implements _i10.Dio {
  _FakeDio_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestRetrier_10 extends _i1.SmartFake
    implements _i11.RequestRetrier {
  _FakeRequestRetrier_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternetConnectionChecker_11 extends _i1.SmartFake
    implements _i12.InternetConnectionChecker {
  _FakeInternetConnectionChecker_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahRes_12 extends _i1.SmartFake implements _i13.SurahRes {
  _FakeSurahRes_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahDetailResModel_13 extends _i1.SmartFake
    implements _i14.SurahDetailResModel {
  _FakeSurahDetailResModel_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioFileModel_14 extends _i1.SmartFake
    implements _i14.AudioFileModel {
  _FakeAudioFileModel_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_15<L, R> extends _i1.SmartFake implements _i15.Either<L, R> {
  _FakeEither_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahDetailRepository_16 extends _i1.SmartFake
    implements _i16.SurahDetailRepository {
  _FakeSurahDetailRepository_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseSurahRepository_17 extends _i1.SmartFake
    implements _i17.BaseSurahRepository {
  _FakeBaseSurahRepository_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSurahsUseCase_18 extends _i1.SmartFake
    implements _i17.GetSurahsUseCase {
  _FakeGetSurahsUseCase_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahState_19 extends _i1.SmartFake implements _i18.SurahState {
  _FakeSurahState_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i10.Dio {
  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i19.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i19.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i19.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i19.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);

  @override
  _i8.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i8.Future<_i6.Response<T>>);
}

/// A class which mocks [AudioPlayer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioPlayer extends _i1.Mock implements _i7.AudioPlayer {
  @override
  _i7.AudioCache get audioCache => (super.noSuchMethod(
        Invocation.getter(#audioCache),
        returnValue: _FakeAudioCache_5(
          this,
          Invocation.getter(#audioCache),
        ),
        returnValueForMissingStub: _FakeAudioCache_5(
          this,
          Invocation.getter(#audioCache),
        ),
      ) as _i7.AudioCache);

  @override
  set audioCache(_i7.AudioCache? _audioCache) => super.noSuchMethod(
        Invocation.setter(
          #audioCache,
          _audioCache,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get playerId => (super.noSuchMethod(
        Invocation.getter(#playerId),
        returnValue: _i20.dummyValue<String>(
          this,
          Invocation.getter(#playerId),
        ),
        returnValueForMissingStub: _i20.dummyValue<String>(
          this,
          Invocation.getter(#playerId),
        ),
      ) as String);

  @override
  _i8.Completer<void> get creatingCompleter => (super.noSuchMethod(
        Invocation.getter(#creatingCompleter),
        returnValue: _FakeCompleter_6<void>(
          this,
          Invocation.getter(#creatingCompleter),
        ),
        returnValueForMissingStub: _FakeCompleter_6<void>(
          this,
          Invocation.getter(#creatingCompleter),
        ),
      ) as _i8.Completer<void>);

  @override
  double get volume => (super.noSuchMethod(
        Invocation.getter(#volume),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get playbackRate => (super.noSuchMethod(
        Invocation.getter(#playbackRate),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i7.PlayerMode get mode => (super.noSuchMethod(
        Invocation.getter(#mode),
        returnValue: _i7.PlayerMode.mediaPlayer,
        returnValueForMissingStub: _i7.PlayerMode.mediaPlayer,
      ) as _i7.PlayerMode);

  @override
  _i7.ReleaseMode get releaseMode => (super.noSuchMethod(
        Invocation.getter(#releaseMode),
        returnValue: _i7.ReleaseMode.release,
        returnValueForMissingStub: _i7.ReleaseMode.release,
      ) as _i7.ReleaseMode);

  @override
  _i7.PlayerState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i7.PlayerState.stopped,
        returnValueForMissingStub: _i7.PlayerState.stopped,
      ) as _i7.PlayerState);

  @override
  set state(_i7.PlayerState? state) => super.noSuchMethod(
        Invocation.setter(
          #state,
          state,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Stream<_i7.AudioEvent> get eventStream => (super.noSuchMethod(
        Invocation.getter(#eventStream),
        returnValue: _i8.Stream<_i7.AudioEvent>.empty(),
        returnValueForMissingStub: _i8.Stream<_i7.AudioEvent>.empty(),
      ) as _i8.Stream<_i7.AudioEvent>);

  @override
  _i8.Stream<_i7.PlayerState> get onPlayerStateChanged => (super.noSuchMethod(
        Invocation.getter(#onPlayerStateChanged),
        returnValue: _i8.Stream<_i7.PlayerState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i7.PlayerState>.empty(),
      ) as _i8.Stream<_i7.PlayerState>);

  @override
  _i8.Stream<Duration> get onPositionChanged => (super.noSuchMethod(
        Invocation.getter(#onPositionChanged),
        returnValue: _i8.Stream<Duration>.empty(),
        returnValueForMissingStub: _i8.Stream<Duration>.empty(),
      ) as _i8.Stream<Duration>);

  @override
  _i8.Stream<Duration> get onDurationChanged => (super.noSuchMethod(
        Invocation.getter(#onDurationChanged),
        returnValue: _i8.Stream<Duration>.empty(),
        returnValueForMissingStub: _i8.Stream<Duration>.empty(),
      ) as _i8.Stream<Duration>);

  @override
  _i8.Stream<void> get onPlayerComplete => (super.noSuchMethod(
        Invocation.getter(#onPlayerComplete),
        returnValue: _i8.Stream<void>.empty(),
        returnValueForMissingStub: _i8.Stream<void>.empty(),
      ) as _i8.Stream<void>);

  @override
  _i8.Stream<void> get onSeekComplete => (super.noSuchMethod(
        Invocation.getter(#onSeekComplete),
        returnValue: _i8.Stream<void>.empty(),
        returnValueForMissingStub: _i8.Stream<void>.empty(),
      ) as _i8.Stream<void>);

  @override
  _i8.Stream<String> get onLog => (super.noSuchMethod(
        Invocation.getter(#onLog),
        returnValue: _i8.Stream<String>.empty(),
        returnValueForMissingStub: _i8.Stream<String>.empty(),
      ) as _i8.Stream<String>);

  @override
  _i8.Future<void> play(
    _i7.Source? source, {
    double? volume,
    double? balance,
    _i7.AudioContext? ctx,
    Duration? position,
    _i7.PlayerMode? mode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #play,
          [source],
          {
            #volume: volume,
            #balance: balance,
            #ctx: ctx,
            #position: position,
            #mode: mode,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setAudioContext(_i7.AudioContext? ctx) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioContext,
          [ctx],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setPlayerMode(_i7.PlayerMode? mode) => (super.noSuchMethod(
        Invocation.method(
          #setPlayerMode,
          [mode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> resume() => (super.noSuchMethod(
        Invocation.method(
          #resume,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> release() => (super.noSuchMethod(
        Invocation.method(
          #release,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> seek(Duration? position) => (super.noSuchMethod(
        Invocation.method(
          #seek,
          [position],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setBalance(double? balance) => (super.noSuchMethod(
        Invocation.method(
          #setBalance,
          [balance],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setReleaseMode(_i7.ReleaseMode? releaseMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReleaseMode,
          [releaseMode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setPlaybackRate(double? playbackRate) => (super.noSuchMethod(
        Invocation.method(
          #setPlaybackRate,
          [playbackRate],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSource(_i7.Source? source) => (super.noSuchMethod(
        Invocation.method(
          #setSource,
          [source],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSourceUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #setSourceUrl,
          [url],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSourceDeviceFile(String? path) => (super.noSuchMethod(
        Invocation.method(
          #setSourceDeviceFile,
          [path],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSourceAsset(String? path) => (super.noSuchMethod(
        Invocation.method(
          #setSourceAsset,
          [path],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSourceBytes(_i21.Uint8List? bytes) => (super.noSuchMethod(
        Invocation.method(
          #setSourceBytes,
          [bytes],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<Duration?> getDuration() => (super.noSuchMethod(
        Invocation.method(
          #getDuration,
          [],
        ),
        returnValue: _i8.Future<Duration?>.value(),
        returnValueForMissingStub: _i8.Future<Duration?>.value(),
      ) as _i8.Future<Duration?>);

  @override
  _i8.Future<Duration?> getCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
        ),
        returnValue: _i8.Future<Duration?>.value(),
        returnValueForMissingStub: _i8.Future<Duration?>.value(),
      ) as _i8.Future<Duration?>);

  @override
  _i8.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [AudioPlayerManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioPlayerManager extends _i1.Mock
    implements _i11.AudioPlayerManager {
  @override
  _i7.AudioPlayer verseAudio(String? verseNumber) => (super.noSuchMethod(
        Invocation.method(
          #verseAudio,
          [verseNumber],
        ),
        returnValue: _FakeAudioPlayer_7(
          this,
          Invocation.method(
            #verseAudio,
            [verseNumber],
          ),
        ),
        returnValueForMissingStub: _FakeAudioPlayer_7(
          this,
          Invocation.method(
            #verseAudio,
            [verseNumber],
          ),
        ),
      ) as _i7.AudioPlayer);

  @override
  void stopAllExcept(String? verseNumber) => super.noSuchMethod(
        Invocation.method(
          #stopAllExcept,
          [verseNumber],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopAll() => super.noSuchMethod(
        Invocation.method(
          #stopAll,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i11.DioClient {
  @override
  _i8.Future<_i6.Response<dynamic>> get(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
    _i2.ProgressCallback? onSendProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
            #onSendProgress: onSendProgress,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<dynamic>> post(
    String? url, {
    Map<String, dynamic>? queryParameters,
    dynamic data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
    _i2.ProgressCallback? onSendProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #queryParameters: queryParameters,
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
            #onSendProgress: onSendProgress,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #queryParameters: queryParameters,
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #queryParameters: queryParameters,
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<dynamic>> put(
    String? url, {
    Map<String, dynamic>? queryParameters,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #queryParameters: queryParameters,
            #data: data,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #queryParameters: queryParameters,
              #data: data,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #queryParameters: queryParameters,
              #data: data,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i8.Future<_i6.Response<dynamic>> delete(
    String? url, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#queryParameters: queryParameters},
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);
}

/// A class which mocks [CustomInterceptor].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomInterceptor extends _i1.Mock implements _i11.CustomInterceptor {
  @override
  _i9.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_8(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_8(
          this,
          Invocation.getter(#log),
        ),
      ) as _i9.Logger);

  @override
  _i10.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_9(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_9(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i10.Dio);

  @override
  set dio(_i10.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.RequestRetrier get requestRetrier => (super.noSuchMethod(
        Invocation.getter(#requestRetrier),
        returnValue: _FakeRequestRetrier_10(
          this,
          Invocation.getter(#requestRetrier),
        ),
        returnValueForMissingStub: _FakeRequestRetrier_10(
          this,
          Invocation.getter(#requestRetrier),
        ),
      ) as _i11.RequestRetrier);

  @override
  set requestRetrier(_i11.RequestRetrier? _requestRetrier) =>
      super.noSuchMethod(
        Invocation.setter(
          #requestRetrier,
          _requestRetrier,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onRequest(
    _i2.RequestOptions? options,
    _i5.RequestInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onRequest,
          [
            options,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onResponse(
    _i6.Response<dynamic>? response,
    _i5.ResponseInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onResponse,
          [
            response,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    _i10.DioException? err,
    _i5.ErrorInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            err,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isBadRequest(_i10.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isBadRequest,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isUnauthorized(_i10.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isUnauthorized,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isForbidden(_i10.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isForbidden,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isNotFound(_i10.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isNotFound,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isConnectionError(_i10.DioException? err) => (super.noSuchMethod(
        Invocation.method(
          #isConnectionError,
          [err],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [RequestRetrier].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestRetrier extends _i1.Mock implements _i11.RequestRetrier {
  @override
  _i10.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_9(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_9(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i10.Dio);

  @override
  _i12.InternetConnectionChecker get internetConnectionChecker =>
      (super.noSuchMethod(
        Invocation.getter(#internetConnectionChecker),
        returnValue: _FakeInternetConnectionChecker_11(
          this,
          Invocation.getter(#internetConnectionChecker),
        ),
        returnValueForMissingStub: _FakeInternetConnectionChecker_11(
          this,
          Invocation.getter(#internetConnectionChecker),
        ),
      ) as _i12.InternetConnectionChecker);

  @override
  _i8.Future<_i6.Response<dynamic>> retryRequest(
          _i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #retryRequest,
          [requestOptions],
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #retryRequest,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #retryRequest,
            [requestOptions],
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);
}

/// A class which mocks [SurahRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahRemoteDataSource extends _i1.Mock
    implements _i13.SurahRemoteDataSource {
  @override
  _i8.Future<_i13.SurahRes> getSurahs() => (super.noSuchMethod(
        Invocation.method(
          #getSurahs,
          [],
        ),
        returnValue: _i8.Future<_i13.SurahRes>.value(_FakeSurahRes_12(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i13.SurahRes>.value(_FakeSurahRes_12(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
      ) as _i8.Future<_i13.SurahRes>);
}

/// A class which mocks [DetailSurahRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailSurahRemoteDataSource extends _i1.Mock
    implements _i22.DetailSurahRemoteDataSource {
  @override
  _i8.Future<_i14.SurahDetailResModel> getDetailSurah(int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailSurah,
          [surahNumber],
        ),
        returnValue: _i8.Future<_i14.SurahDetailResModel>.value(
            _FakeSurahDetailResModel_13(
          this,
          Invocation.method(
            #getDetailSurah,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i14.SurahDetailResModel>.value(
            _FakeSurahDetailResModel_13(
          this,
          Invocation.method(
            #getDetailSurah,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i14.SurahDetailResModel>);

  @override
  _i8.Future<_i14.AudioFileModel> getFullAudio(int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFullAudio,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i14.AudioFileModel>.value(_FakeAudioFileModel_14(
          this,
          Invocation.method(
            #getFullAudio,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i14.AudioFileModel>.value(_FakeAudioFileModel_14(
          this,
          Invocation.method(
            #getFullAudio,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i14.AudioFileModel>);
}

/// A class which mocks [BaseSurahRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseSurahRepository extends _i1.Mock
    implements _i17.BaseSurahRepository {
  @override
  _i8.Future<_i15.Either<_i11.Failure, _i17.SurahResEntity>> getSurahs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurahs,
          [],
        ),
        returnValue:
            _i8.Future<_i15.Either<_i11.Failure, _i17.SurahResEntity>>.value(
                _FakeEither_15<_i11.Failure, _i17.SurahResEntity>(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i15.Either<_i11.Failure, _i17.SurahResEntity>>.value(
                _FakeEither_15<_i11.Failure, _i17.SurahResEntity>(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
      ) as _i8.Future<_i15.Either<_i11.Failure, _i17.SurahResEntity>>);
}

/// A class which mocks [SurahDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahDetailRepository extends _i1.Mock
    implements _i16.SurahDetailRepository {
  @override
  _i8.Future<_i15.Either<_i11.Failure, _i16.SurahDetailRes>> getDetailSurah(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailSurah,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i15.Either<_i11.Failure, _i16.SurahDetailRes>>.value(
                _FakeEither_15<_i11.Failure, _i16.SurahDetailRes>(
          this,
          Invocation.method(
            #getDetailSurah,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i15.Either<_i11.Failure, _i16.SurahDetailRes>>.value(
                _FakeEither_15<_i11.Failure, _i16.SurahDetailRes>(
          this,
          Invocation.method(
            #getDetailSurah,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i15.Either<_i11.Failure, _i16.SurahDetailRes>>);

  @override
  _i8.Future<_i15.Either<_i11.Failure, _i16.AudioFile>> getFullAudio(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFullAudio,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i15.Either<_i11.Failure, _i16.AudioFile>>.value(
                _FakeEither_15<_i11.Failure, _i16.AudioFile>(
          this,
          Invocation.method(
            #getFullAudio,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i15.Either<_i11.Failure, _i16.AudioFile>>.value(
                _FakeEither_15<_i11.Failure, _i16.AudioFile>(
          this,
          Invocation.method(
            #getFullAudio,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i15.Either<_i11.Failure, _i16.AudioFile>>);
}

/// A class which mocks [GetSurahDetailUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSurahDetailUseCase extends _i1.Mock
    implements _i16.GetSurahDetailUseCase {
  @override
  _i16.SurahDetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSurahDetailRepository_16(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeSurahDetailRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.SurahDetailRepository);

  @override
  _i8.Future<_i15.Either<_i11.Failure, _i16.SurahDetailRes>> execute(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i15.Either<_i11.Failure, _i16.SurahDetailRes>>.value(
                _FakeEither_15<_i11.Failure, _i16.SurahDetailRes>(
          this,
          Invocation.method(
            #execute,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i15.Either<_i11.Failure, _i16.SurahDetailRes>>.value(
                _FakeEither_15<_i11.Failure, _i16.SurahDetailRes>(
          this,
          Invocation.method(
            #execute,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i15.Either<_i11.Failure, _i16.SurahDetailRes>>);
}

/// A class which mocks [GetSurahsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSurahsUseCase extends _i1.Mock implements _i17.GetSurahsUseCase {
  @override
  _i17.BaseSurahRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeBaseSurahRepository_17(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeBaseSurahRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i17.BaseSurahRepository);

  @override
  _i8.Future<_i15.Either<_i11.Failure, _i17.SurahResEntity>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i8.Future<_i15.Either<_i11.Failure, _i17.SurahResEntity>>.value(
                _FakeEither_15<_i11.Failure, _i17.SurahResEntity>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i15.Either<_i11.Failure, _i17.SurahResEntity>>.value(
                _FakeEither_15<_i11.Failure, _i17.SurahResEntity>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i8.Future<_i15.Either<_i11.Failure, _i17.SurahResEntity>>);
}

/// A class which mocks [GetSurahAudioUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSurahAudioUsecase extends _i1.Mock
    implements _i16.GetSurahAudioUsecase {
  @override
  _i16.SurahDetailRepository get surahRepository => (super.noSuchMethod(
        Invocation.getter(#surahRepository),
        returnValue: _FakeSurahDetailRepository_16(
          this,
          Invocation.getter(#surahRepository),
        ),
        returnValueForMissingStub: _FakeSurahDetailRepository_16(
          this,
          Invocation.getter(#surahRepository),
        ),
      ) as _i16.SurahDetailRepository);

  @override
  _i8.Future<_i15.Either<_i11.Failure, _i16.AudioFile>> call(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [surahNumber],
        ),
        returnValue:
            _i8.Future<_i15.Either<_i11.Failure, _i16.AudioFile>>.value(
                _FakeEither_15<_i11.Failure, _i16.AudioFile>(
          this,
          Invocation.method(
            #call,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i15.Either<_i11.Failure, _i16.AudioFile>>.value(
                _FakeEither_15<_i11.Failure, _i16.AudioFile>(
          this,
          Invocation.method(
            #call,
            [surahNumber],
          ),
        )),
      ) as _i8.Future<_i15.Either<_i11.Failure, _i16.AudioFile>>);
}

/// A class which mocks [SurahBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahBloc extends _i1.Mock implements _i18.SurahBloc {
  @override
  _i17.GetSurahsUseCase get getSurahsUseCase => (super.noSuchMethod(
        Invocation.getter(#getSurahsUseCase),
        returnValue: _FakeGetSurahsUseCase_18(
          this,
          Invocation.getter(#getSurahsUseCase),
        ),
        returnValueForMissingStub: _FakeGetSurahsUseCase_18(
          this,
          Invocation.getter(#getSurahsUseCase),
        ),
      ) as _i17.GetSurahsUseCase);

  @override
  _i18.SurahState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSurahState_19(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeSurahState_19(
          this,
          Invocation.getter(#state),
        ),
      ) as _i18.SurahState);

  @override
  _i8.Stream<_i18.SurahState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i18.SurahState>.empty(),
        returnValueForMissingStub: _i8.Stream<_i18.SurahState>.empty(),
      ) as _i8.Stream<_i18.SurahState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void add(_i18.SurahEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i18.SurahEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i18.SurahState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i18.SurahEvent>(
    _i23.EventHandler<E, _i18.SurahState>? handler, {
    _i23.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i23.Transition<_i18.SurahEvent, _i18.SurahState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void onChange(_i23.Change<_i18.SurahState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
